#!/usr/bin/env bash
ROOT_DIR="$(dirname $0)/../"
source "${ROOT_DIR}/etc/settings"

if [[ -z ${BACKBLAZE_ACCOUNT_AUTHORIZATION_TOKEN} ]] || [[ -z ${BACKBLAZE_API_URL} ]] ; then
  eval $(${ROOT_DIR}/bin/bb_token)
  export BACKBLAZE_ACCOUNT_AUTHORIZATION_TOKEN
  export BACKBLAZE_API_URL
fi

BATCH_SIZE=7
MOVIE_DIR=$(readlink -f "${ROOT_DIR}/outgoing")
SHUF_CMD=$(command -v shuf || command -v gshuf)

## get the download_now.txt
if [[ -f /tmp/download_now.txt ]]; then
  for imdb_id in $(cat /tmp/download_now.txt); do
    [[ -d "${MOVIE_DIR}/${imdb_id}" ]] && continue
    ${ROOT_DIR}/bin/downloader ${imdb_id}
  done
fi

for data in $(cat ${ROOT_DIR}/etc/torrent_queue.txt); do
  imdb_id=$(echo ${data} | awk '{ print $1 }')
  url=$(echo ${data} | awk '{ print $2 }')
  ext=$(echo ${url} | rev | cut -d. -f1 | rev)
  [[ -d "${MOVIE_DIR}/${imdb_id}" ]] && continue
  [[ -f "${ROOT_DIR}/${imdb_id}.${ext}" ]] && continue

  wget ${url} -O ${ROOT_DIR}/incoming/${imdb_id}.${ext}
done

# grab some randoms
for imdb_id in $(${SHUF_CMD} ${ROOT_DIR}/etc/movies.txt | head -n${BATCH_SIZE}); do
  [[ -d "${MOVIE_DIR}/${imdb_id}" ]] && continue
  ${ROOT_DIR}/bin/downloader ${imdb_id}
done
